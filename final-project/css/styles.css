body {
  margin: 0;
  font-family: 'Open Sans', sans-serif;
}

/* Header: start mobile with logo at the top left and nav>li structure is in a column. Search bar go 100% width, At desktop, all elements go into a signle row so I will use flex. */
nav {
  padding: 1% 2%;
  overflow: auto;
  background-color: hsl(0, 0%, 13%);
  align-items: center;
}

nav .logoContainer{
  background-color: #bd8d3a;
}

ul,
li,
a {
  list-style-type: none;
  color: #bd8d3a;
  text-decoration: none;
  padding: 10px;
  text-align: center;
}

nav li a:hover {
  background-color: #bd8d3a;
  color: black;
}

nav .searchBar {
  display: flex;
  align-items: center;
}

.searchBar input {
  width: 100%;
  height: 40px;
}

.searchBar button {
  color: #bd8d3a;
  background-color: transparent;
  border: 1px solid #bd8d3a;
  padding: 2%;
  margin-left: 0px;
}

@media screen and (min-width: 768px) {
  nav {
    padding: 1% 8%;
    height: 60px;
    display: flex;
    justify-content: space-between;
  }

  nav img {
    float: left;
    width: 50px;
    height: 50px;
  }

  nav ul {
    display: flex;
    gap: 1em;
    font-size: 18px;
  }

  nav ul li {
    float: left;
    margin-top: 4px;
    margin-bottom: 4px;
    display: inline;
  }

  nav ul li a {
    float: left;
    display: block;
    font-size: 17px;
    padding: 10px;
  }

  .searchBar input {
    width: 200px;
    height: 45px;
  }

  .searchBar button {
    padding: 6%; 
  }
}

/* Welcome: At mobile, this has a full width background image with a semi-transparent structure in the middle that holds the content. At desktop, the content structure is no longer edge to edge and is now centered. */
#mainBanner {
  position: relative;
  height: 400px;
}

#mainBanner img {
  height: 400px;
  width: 100%;
  object-fit: cover;
}

#mainBanner .wrapper {
  position: absolute;
  width: 96%;
  padding: 4% 2%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: rgb(34, 34, 34, 0.7);
  color: white;
}

#mainBanner button {
  background-color: #bd8d3a;
  color: black;
  border: 0px;
  padding: 12px;
  font-size: 15px;
}

@media screen and (min-width: 768px) {
  #mainBanner {
    height: 700px;
  }
  
  #mainBanner img {
    height: 700px;
  }
  #mainBanner .wrapper {
    width: 60%;
    padding: 5%;
  }
}

/* About: At mobile, imange has full width and the chunk of text below that. At desktop, the image and text will beside of each other. */
#aboutUs {
  background-color: #fbe7b3;
  padding: 2% 2%;
}
#aboutUs img {
  width: 100%;
}

#aboutUs .details h1 {
  font-size: 30px;
}

#aboutUs .details p {
  font-size: 14px;
}

@media screen and (min-width: 768px) {
  #aboutUs {
    display: table;
  }

  #aboutUs img {
    margin: 0 2% 0 5%;
    float: left;
    width: 40%;
  }
}

/* Services: At mobile, services have multiple child-elements in one column with bleed. Each child element include image, sub-heading, some text and button. At desktop, will use grid to create a multi-column layout. grid-template-areas will allow me to adjust the width for different child elements. */

#services {
  padding: 2% 2%;
}

.serviceGrid {
  display: grid;
  grid-gap: 20px;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr 1fr;
}

.serviceGrid .gridWapper {
  background-color: #fbe7b3;
  height: fit-content;
}
.serviceGrid .gridWapper p {
  font-size: 14px;
}

.serviceGrid .gridWapper h3,
p,
button {
  margin: 10px;
}

.serviceGrid .gridWapper h3 {
  font-size: 25px;
}
.serviceGrid .gridWapper button {
  background-color: black;
  border: 0px;
  padding: 20px;
  align-items: center;
  color: white;
  font-size: 15px;
}

.serviceGrid .gridWapper img {
  width: 100%;
  height: 250px;
  object-fit: cover;
}

@media screen and (min-width: 768px) {
  #services {
    padding: 2% 8%;
  }

  .serviceGrid .gridWapper button {
    width: 95%;
  }

  .serviceGrid {
    grid-template-columns: auto auto auto auto auto auto;
    grid-template-rows: 1fr 1fr;
  }

  .serviceGrid .gridWapper:nth-child(1) {
    grid-column: 1 / 4;
  }

  .serviceGrid .gridWapper:nth-child(2) {
    grid-column: 4 / 7;
  }

  .serviceGrid .gridWapper:nth-child(3) {
    grid-column: 1 / 3;
  }

  .serviceGrid .gridWapper:nth-child(4) {
    grid-column: 3 / 5;
  }

  .serviceGrid .gridWapper:nth-child(5) {
    grid-column: 5 / 7;
  }

}

/* Vision: At mobile, this has a full width background image. In the middle, it holds the content and button. At desktop, the content structure will still edge to edge and has a button. */
#our-vision {
  position: relative;
}

#our-vision img {
  width: 100%;
  height: 300px;
  object-fit: cover;
  background-color: rgb(34, 34, 34, 0.7);
}

#our-vision div {
  position: absolute;
  top: 50%;
  left: 3%;
  transform: translate(-3%, -50%);
  color: white;
}

#our-vision div p:nth-child(1) {
  font-size: 30px;
}

#our-vision div p:nth-child(2) {
  font-size: 14px;
}

#our-vision button {
  background-color: black;
  border: 0px;
  padding: 20px;
  color: white;
  font-size: 15px;
}

@media screen and (min-width: 768px) {
  #our-vision img {
    height: 300px;
  }

  #our-vision div {
    top: 50%;
    padding: 0 8%;
    left: 2%;
  }

  #our-vision div p:nth-child(1) {
    font-size: 30px;
  }
  
  #our-vision div p:nth-child(2) {
    font-size: 15px;
  }

  #our-vision button {
    padding: 20px;
    font-size: 20px;
  }
}

/* Team: At mobile, image has full width the chunk of text below that. At desktop, will use grid to create a multi-column layout. grid-template-areas will allow me to adjust the width for different child elements.  */
#team {
  padding: 2% 2%;
}

#team img {
  object-fit: cover;
  height: 100%;
  width: 100%;
}

.teamGrid .wrapper {
  background-color: #fbe7b3;
  padding: 2%;
}

.teamGrid .wrapper p:nth-child(1) {
  font-size: 25px;
}

.border {
  display: block;
  border-bottom: 2px solid gray;
}

.teamGrid .wrapper p:nth-child(2) {
  font-size: 20px;
}

.teamGrid .wrapper p:nth-child(3) {
  font-size: 14px;
}

@media screen and (min-width: 768px) {
  #team {
    padding: 2% 8%;
  }

  #team img {
    width: 100%;
  }

  .teamGrid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    grid-template-areas:
      "img1 info1"
      "info2 img2";
  }

  .teamGrid div:nth-child(1) {
    grid-area: img1;
  }

  .teamGrid div:nth-child(2) {
    grid-area: info1;
  }
  .teamGrid div:nth-child(3) {
    grid-area: img2;
  }
  .teamGrid div:nth-child(4) {
    grid-area: info2;
  }
}

/* Contact: At mobile, using flex to place form and map beside each other and adding schedule table using table css properties. At desktop, map will place below the contact form and table with the use of flex. i-frame is used to embed the map in webpage. */
#contact {
  padding: 2% 2%;
}

#contact p {
  font-size: 30px;
  margin: 0%;
}

.flex-container {
  display: flex;
  flex-direction: column;
}

.flex-container h3 {
  font-size: 25px;
}

.flex-container input {
  width: 98%;
  height: 30px;
}

.flex-container textarea {
  width: 98%;
  height: 200px;
}

.flex-container button {
  background-color: black;
  color: #bd8d3a;
  border: 0px;
  padding: 10px 40px;
  font-size: 15px;
  margin-left: 0%;
}

#contact iframe {
  width: 100%;
}

.schdule table {
  width: 100%;
}

.schdule table,
th,
td {
  border: 1px solid;
  border-collapse: collapse;
}

.schdule th {
  background-color: #fbe7b3;
}

@media screen and (min-width: 768px) {
  #contact {
    padding: 2% 8%;
  }

  .flex-container {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
    grid-template-rows: 1fr 150px;
  }

  .flex-container {
    flex-direction: row;
  }

  .flex-item-left {
    grid-column: 1 / 4;
  }

  .flex-item-right {
    grid-column: 4 / 7;
  }

  .schdule {
    grid-column: 1 / 7;
    grid-row: 2;
  }
}

/* Footer: At mobile, this has a full width solid background. At desktop, it is same as the mobile. */
footer {
  background-color: #222222;
  height: 100px;
  color: #bd8d3a;
  padding: 2% 0 0 8%;
}