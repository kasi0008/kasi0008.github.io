body {
  margin: 0;
  font-family: 'Open Sans', sans-serif;
}

/* Header: start mobile with logo at the top left and nav>li structure is in a column. Search bar go 100% width, At desktop, all elements go into a signle row so I will use flex. */
nav {
  padding: 1% 2%;
  overflow: auto;
  background-color: hsl(0, 0%, 13%);
  align-items: center;
}

ul,
li,
a {
  list-style-type: none;
  color: #bd8d3a;
  text-decoration: none;
  padding: 10px;
  text-align: center;
}

nav li a:hover {
  background-color: #bd8d3a;
  color: black;
}

nav .searchBar {
  display: flex;
  align-items: center;
}

.searchBar input {
  width: 100%;
  height: 40px;
}

.searchBar button {
  color: #bd8d3a;
  background-color: transparent;
  border: 1px solid #bd8d3a;
  padding: 2%;
  margin-left: 0px;
}

/* Welcome: At mobile, this has a full width background image with a semi-transparent structure in the middle that holds the content. At desktop, the content structure is no longer edge to edge and is now centered. */
#mainBanner {
  position: relative;
  height: 400px;
}

#mainBanner img {
  height: 400px;
  width: 100%;
  object-fit: cover;
}

#mainBanner .wrapper {
  position: absolute;
  width: 96%;
  padding: 4% 2%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: rgb(34, 34, 34, 0.7);
  color: white;
}

#mainBanner button {
  background-color: #bd8d3a;
  color: black;
  border: 0px;
  padding: 12px;
  font-size: 15px;
}

/* About: At mobile, imange has full width with cornered bleed and the chunk of text below that. At desktop, the image and text will beside of each other. */
#aboutUs {
  background-color: #fbe7b3;
  padding: 2% 2%;
}
#aboutUs img {
  width: 100%;
}

#aboutUs .details h1 {
  font-size: 30px;
}

#aboutUs .details p {
  font-size: 14px;
}

/* Services: At mobile, services have multiple child-elements in one column with bleed. Each child element include image, sub-heading, some text and button. At desktop, will use grid to create a multi-column layout. grid-template-areas will allow me to adjust the width for different child elements. */

#services {
  padding: 2% 2%;
}

.serviceGrid {
  display: grid;
  grid-gap: 20px;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr 1fr;
}

.serviceGrid .gridWapper {
  background-color: #fbe7b3;
  height: fit-content;
}
.serviceGrid .gridWapper p {
  font-size: 14px;
}

.serviceGrid .gridWapper h3,
p,
button {
  margin: 10px;
}

.serviceGrid .gridWapper h3 {
  font-size: 25px;
}
.serviceGrid .gridWapper button {
  background-color: black;
  border: 0px;
  padding: 20px;
  width: 95%;
  align-items: center;
  color: white;
  font-size: 15px;
}

.serviceGrid .gridWapper img {
  width: 100%;
  height: 250px;
  object-fit: cover;
}